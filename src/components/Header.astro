---
import { Menu, X } from 'lucide-astro';

const navItems = [
	{ href: '/', label: 'Home' },
	{ href: '/services', label: 'Services' },
	{ href: '/about', label: 'About' },
	{ href: '/contact', label: 'Contact' },
];

const currentPath = Astro.url.pathname;
---

<header class="fixed w-full top-0 z-50 bg-slate-950/80 backdrop-blur-lg border-b border-slate-800">
	<nav class="container mx-auto px-4 sm:px-6 lg:px-8">
		<div class="flex items-center justify-between h-16">
			<!-- Logo -->
			<a href="/" class="flex items-center space-x-3 group">
				<div class="w-10 h-10 bg-gradient-to-br from-cyan-500 to-blue-600 rounded-lg flex items-center justify-center group-hover:scale-105 transition-transform">
					<span class="text-white font-bold text-xl">VM</span>
				</div>
				<span class="font-bold text-lg text-white hidden sm:block">
					Velvethy & Mikes <span class="text-cyan-400">Corporation</span>
				</span>
			</a>

			<!-- Desktop Navigation -->
			<div class="hidden md:flex items-center space-x-1">
				{navItems.map((item) => (
					<a
						href={item.href}
						class={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${
							currentPath === item.href
								? 'bg-cyan-500/10 text-cyan-400'
								: 'text-slate-300 hover:text-white hover:bg-slate-800'
						}`}
					>
						{item.label}
					</a>
				))}
			</div>

			<!-- Mobile Menu Button -->
			<button
				id="mobile-menu-button"
				class="md:hidden p-2 rounded-lg text-slate-300 hover:text-white hover:bg-slate-800 transition-colors"
				aria-label="Toggle menu"
			>
				<Menu id="menu-icon" size={24} />
				<X id="close-icon" size={24} class="hidden" />
			</button>
		</div>

		<!-- Mobile Navigation -->
		<div id="mobile-menu" class="hidden md:hidden pb-4">
			{navItems.map((item) => (
				<a
					href={item.href}
					class={`block px-4 py-3 rounded-lg text-sm font-medium transition-colors ${
						currentPath === item.href
							? 'bg-cyan-500/10 text-cyan-400'
							: 'text-slate-300 hover:text-white hover:bg-slate-800'
					}`}
				>
					{item.label}
				</a>
			))}
		</div>
	</nav>
</header>

<script>
	// Mobile menu toggle
	const menuButton = document.getElementById('mobile-menu-button');
	const mobileMenu = document.getElementById('mobile-menu');
	const menuIcon = document.getElementById('menu-icon');
	const closeIcon = document.getElementById('close-icon');

	menuButton?.addEventListener('click', () => {
		mobileMenu?.classList.toggle('hidden');
		menuIcon?.classList.toggle('hidden');
		closeIcon?.classList.toggle('hidden');
	});

	// Close mobile menu when clicking outside
	document.addEventListener('click', (e) => {
		if (!menuButton?.contains(e.target as Node) && !mobileMenu?.contains(e.target as Node)) {
			mobileMenu?.classList.add('hidden');
			menuIcon?.classList.remove('hidden');
			closeIcon?.classList.add('hidden');
		}
	});
</script>
